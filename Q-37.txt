Question-37


114. Flatten Binary Tree to Linked List --------- Leetcode

class Solution {
public:
    void flatten(TreeNode* root) {
        
        /* Method - 1 */
        
        if(root == 0){
            return;
        }
        
        stack<TreeNode*>s;
        s.push(root);
        
        while(!s.empty()){
            TreeNode* temp = s.top();
            s.pop();
            
            if(temp->right != NULL){
                s.push(temp->right);    
            }
            
            if(temp->left != NULL){
                s.push(temp->left);
            }
            
            if(!s.empty()){
                 temp->right = s.top();
                 temp->left = NULL;
            }
            
        }
    
        /* Method - 2 */
        
        TreeNode* cur = root;
        /*
          
          Visit the rightmost element of the left SubTree and point it's right to cur->right;
          
          Morris Traversal
        
        */
        while(cur != NULL){
            if(cur->left != NULL){
                 TreeNode* pre = cur->left;
                 while(pre->right!=NULL){
                    pre = pre->right;
                 }
                 pre->right = cur->right;
                 cur->right = cur->left;
                 cur->left = NULL;
            }
            cur = cur->right;
        }
        
    }
};