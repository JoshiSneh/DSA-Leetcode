/* Method-1 */

Inbuilt STL

class Solution {
public:
    double myPow(double x, int n) {
        return pow(x,n);
    }
};

/* Method-2 */

T.C = O(N)
S.C = O(1)

class Solution {
public:
    double myPow(double x, int n) {
        double ans = 1;
        bool flag = false;
        
        if(n<0){
            flag = true;
            n=-n;
        }
        
        for(int i=1;i<=n;++i){ans*=x;}
        
        if(flag == true){
            return 1/ans;
        }
        
        return ans;
    }
};

/* Method-3 */
T.C = O(logn)
S.C = O(1)

class Solution {
public:
    double myPow(double x, int n) {
        double ans = 1.0;
        
        long long newN = n;
        
        if(newN < 0){
           newN = -newN;    
        }
        
        while(newN > 0){
            if(newN&1){ /* When newN is odd then power will be n-1 */
                ans = ans*x;
                newN = newN-1;
            }else{
                x = x*x;
                newN = newN/2;
            }
        }
        
        if(n<0){
           return 1/ans;    
        }
        
        return ans;
    }
};