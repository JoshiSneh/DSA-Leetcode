pair<int,int> missingAndRepeating(vector<int> &arr, int n){
	int xor1 = 0;
    
    for(int i=0;i<n;++i){
        xor1=xor1^arr[i];
    }
    
    for(int i=1;i<=n;++i){
        xor1=xor1^i;
    }
    
    int setBitOfX=xor1 & ~(xor1-1);

    int x = 0; 
    int y = 0; 
    
    for(int i=0;i<n;++i){
       if(arr[i] & setBitOfX){
           x = x^arr[i];
       }else{
           y = y^arr[i];
       }
    }
    
    for(int i=1;i<=n;++i){
        if(i & setBitOfX){
            x = x^i;
        }else{
            y= y^i;
        }
    }
    
    int flag = false;
    
    for(int i=0;i<n;++i){
        if(arr[i] == x){
            flag = true;
            break;
        }
    }
    
    if(flag == true){
        return {y,x};
    }
    return {x,y};
}
