/* Method-1 */
T.C O(nlogn)

class Solution{
  private:
  long long merge(long long arr[], long long temp[], long long low, long long mid, long long high){
      
      long long i = low; /* i is the index of left array */
      long long j = mid; /* j is the index of right array */
      long long k = low; /* k is for iterating over the temporary array */
      
      long long invCount = 0;
      
      
      while((i<=mid-1) && (j<=high)){
          if(arr[i]<=arr[j]){
              temp[k++] = arr[i++];
          }else{
              temp[k++] = arr[j++];
              invCount+=(mid-i);
          }
      }
      /* Adding the extra element to the temp array */
      
      while(i<=mid-1){
          temp[k++] = arr[i++];
      }
      
      while(j<=high){
          temp[k++] = arr[j++];
      }
      
      /* Copying the sorted array from temporary array to the original array */
      for(int i=low;i<=high;++i){
          arr[i] = temp[i];
      }
      
      return invCount;
  }
  
  private:
  long long mergeSort(long long arr[], long long temp[], long long low, long long high){
      long long mid, invCount = 0;
      
      if(high > low){
          mid = (low+high)/2;
          cout<<low<<" "<<high<<endl;
          invCount += mergeSort(arr,temp,low,mid);
          invCount += mergeSort(arr,temp,mid+1,high);
          
          invCount += merge(arr,temp,low,mid+1,high);
      }
      
      return invCount;
  }
  public:
    // arr[]: Input Array
    // N : Size of the Array arr[]
    // Function to count inversions in the array.
    long long int inversionCount(long long arr[], long long N){
        
        long long temp[N];
        
        return mergeSort(arr,temp,0,N-1);
    }

};

// { Driver Code Starts.

int main() {
    
    long long T;
    cin >> T;
    
    while(T--){
        long long N;
        cin >> N;
        
        long long A[N];
        for(long long i = 0;i<N;i++){
            cin >> A[i];
        }
        Solution obj;
        cout << obj.inversionCount(A,N) << endl;
    }
    
    return 0;
}
  // } Driver Code Ends