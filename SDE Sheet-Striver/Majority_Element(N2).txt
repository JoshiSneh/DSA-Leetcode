/* Method-1 */

T.C = O(N)
S.C = O(N)

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n = nums.size();
        
        unordered_map<int,int>m;
        
        for(auto i:nums){m[i]++;}
        
        for(auto i:m){
          if(i.second > n/2){
              return i.first;
          }    
        }
        
        return -1;
    }
};

/* Method-2 */

T.C = O(n)
S.C = O(1)

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n = nums.size();
        
        int count = 0;
        int ele = 0;
        
        for(int i=0;i<n;++i){
            if(count == 0){
                ele = nums[i];
            }
            
            if(ele == nums[i]){
                count++;
            }else{
                count--;
            }
        }
        
        return ele;
    }
};