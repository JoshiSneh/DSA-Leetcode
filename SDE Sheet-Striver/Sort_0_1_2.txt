/* Method-1 */
Counting Sort

T.C-O(N)+O(N)
S.C-O(1)

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int freq[3]={0};
        int n = nums.size();
        
        for(int i=0;i<n;++i){
            freq[nums[i]]++;
        }
        
        int j = 0;
        
        for(int i=0;i<=2;++i){
            while(freq[i]--){
                nums[j++] = i;
            }
        }
        
    }
};


/* Method-2 */
Using DNF

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int low = 0;
        int mid = 0;
        int high = nums.size()-1;
        
        while(mid<=high){
            if(nums[mid] == 0){
                swap(nums[low],nums[mid]);
                low++;
                mid++;
            }else if(nums[mid] == 1){
                mid++;
            }else if(nums[mid] == 2){
                swap(nums[mid],nums[high]);
                high--;
            }
        }
        
    }
};