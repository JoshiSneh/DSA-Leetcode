/* Method-1 */
T.C = O(N) + O(N)
S.C = O(1)

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* temp = dummy;
        
        int count = 0;
        
        while(temp != NULL){
            count++;
            temp=temp->next;
        }
        count--;
        
        int diff = abs(count-n);
        
        if(diff == 0){
          return dummy->next->next;    
        }
        
        temp=dummy;
        
        while(diff--){
            temp=temp->next;
        }
        
        ListNode* toDelete = temp->next;
        temp->next = temp->next->next;
        delete toDelete;
        
        return dummy->next;
    }
};

/* Method-2 */
T.C = O(N)
S.C = O(1)

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        
        
        ListNode* fast = dummy;
        ListNode* slow = dummy;
        for(int i=1;i<=n;++i){
            fast=fast->next;
        }
        
        while(fast->next != NULL){
            slow=slow->next;
            fast=fast->next;
        }
        
        slow->next=slow->next->next;
        
        return dummy->next;
        
    }
};